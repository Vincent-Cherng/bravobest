
server.port=8080
server.servlet.context-path=/bravo


#mysql参数配置
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/jian?useunicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=cheng
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#使用阿里巴巴druid数据源，默认使用自带的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=15
spring.datasource.minIdle=15
spring.datasource.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 校验SQL，用来检测连接是否有效的sql 必须是一个查询语句，，如果不配validationQuery项，则下面三项配置无用
#Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#mysql配置
spring.datasource.validationQuery=select 'x'
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true


#mybatis参数配置
#mapper文件存放位置
mybatis.mapper-locations=classpath:mappers/*.xml
#typeAliasesPackage指定用于映射数据的pojo位置
mybatis.type-aliases-package=com.bravo.bravobest.api.entity
#开启控制台打印sql
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
logging.level.com.bravo.bravobest.dao=debug
